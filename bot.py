import os
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    CallbackContext,
    ConversationHandler,
    MessageHandler,
    filters,
)
from datetime import time, datetime, timedelta

# ุฌูุจ ุชููู ุงูุจูุช ูู ุงููุชุบูุฑุงุช ุงูุจูุฆูุฉ
TOKEN = os.getenv("TOKEN")
if not TOKEN:
    raise ValueError("No TOKEN provided. Please set the TOKEN environment variable.")

# ุญุงูุงุช ุงููุญุงุฏุซุฉ
MAIN_MENU, WORD_COUNT, REVIEW_WORDS, COMPLETE_GAP = range(4)

# ูุงุฆูุฉ ุงููููุงุช
WORDS = [
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
    "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ูุณุชุจุฏู ูู ููุณ ุงููุณุงุญุฉุ ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ุญูุซ",
]

# ูุงุฆูุฉ ุงูุฌูู ุงููุงูุตุฉ
GAP_SENTENCES = [
    {"sentence": "ูุฐุง ุงููุต ูู ูุซุงู ููุต ูููู ุฃู ______ ูู ููุณ ุงููุณุงุญุฉ.", "answer": "ูุณุชุจุฏู"},
    {"sentence": "ููุฏ ุชู ุชูููุฏ ูุฐุง ุงููุต ูู ูููุฏ ุงููุต ุงูุนุฑุจูุ ______.", "answer": "ุญูุซ"},
]

# ูุงุฆูุฉ ุงูููุงุฆุฏ ุงููุชููุนุฉ ุนู ุฑูุถุงู
BENEFITS = [
    "๐ ุงูุตูู ูู ุฑูุถุงู ูุนูู ุงูุตุจุฑ ูุงูุชุญูู ููููู ุงูุฅุฑุงุฏุฉ.",
    "๐ ุฑูุถุงู ูุฑุตุฉ ููุชูุจุฉ ูุงูุฑุฌูุน ุฅูู ุงููู ุจููุจ ุณููู.",
    "๐ ููุงู ุงูููู ูู ุฑูุถุงู ูู ุฃูุถู ุงูุนุจุงุฏุงุช ุงูุชู ุชูุฑุจ ุงูุนุจุฏ ุฅูู ุฑุจู.",
    "๐ฟ ุงูุตุฏูุฉ ูู ุฑูุถุงู ุชุชุถุงุนู ุฃุฌุฑูุงุ ููู ูุบูู ุนุธูู.",
    "๐ผ ุฑูุถุงู ุดูุฑ ุงููุฑุขูุ ูููู ุฃูุฒู ุงููุฑุขู ุงููุฑูู ูุฏู ูููุงุณ.",
    "โฐ ุงูุตูุงู ูุฐูุฑูุง ุจูุนูุฉ ุงูุทุนุงู ูุงูุดุฑุงุจ ุงูุชู ูุบูู ุนููุง.",
    "๐ ูููุฉ ุงููุฏุฑ ูู ุฑูุถุงู ุฎูุฑ ูู ุฃูู ุดูุฑุ ูุงุบุชูููุง.",
]

# ุญูุธ ุงููููุงุช ุงูุชู ุชู ุฅุฑุณุงููุง ูููุณุชุฎุฏู
user_data = {}

# ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ
async def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    if user_id not in user_data:
        user_data[user_id] = {"memorized_words": [], "points": 0, "sent_benefits": []}  # ุชููุฆุฉ ุจูุงูุงุช ุงููุณุชุฎุฏู ูุน ูุงุฆูุฉ ุงูููุงุฆุฏ ุงููุฑุณูุฉ

    # ุฑุณุงูุฉ ุชุฑุญูุจูุฉ
    welcome_message = (
        "๐ *ุฑูุถุงู ูุฑูู* ๐\n\n"
        "ูุฑุญุจูุง ุจู ูู ุจูุช ุฑูุถุงู! ููุง ููููู:\n"
        "- ุงูุญุตูู ุนูู ููุงุฆุฏ ูุชููุนุฉ.\n"
        "- ุญูุธ ุงููููุงุช ุงูุนููุฉ.\n"
        "- ุงุฎุชุจุงุฑ ุญูุธู ุจุงุณุชุฎุฏุงู 'ุงููู ุงููุฑุงุบ'.\n\n"
        "ุงุฎุชุฑ ูู ุงููุงุฆูุฉ ุฃุฏูุงู:"
    )

    keyboard = [
        [InlineKeyboardButton("๐ ููุงุฆุฏ ูุชููุนุฉ", callback_data="daily_faidah")],
        [InlineKeyboardButton("๐ ุงุดุชุฑู ูู ุจุฑูุงูุฌ ุญูุธ ุงููููุงุช ุงูุนููุฉ", callback_data="memorize_words")],
        [InlineKeyboardButton("๐ ุงุฎุชุจุงุฑ ุญูุธู (ุงููู ุงููุฑุงุบ)", callback_data="complete_gap")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(welcome_message, reply_markup=reply_markup, parse_mode="Markdown")
    return MAIN_MENU

# ูุนุงูุฌุฉ ุงุฎุชูุงุฑ ููุงุฆุฏ ูุชููุนุฉ
async def daily_faidah(update: Update, context: CallbackContext):
    await update.callback_query.answer()
    user_id = update.callback_query.from_user.id

    # ุชููุฆุฉ ูุงุฆูุฉ ุงูููุงุฆุฏ ุงููุฑุณูุฉ ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
    if "sent_benefits" not in user_data[user_id]:
        user_data[user_id]["sent_benefits"] = []

    # ุชุตููุฉ ุงูููุงุฆุฏ ุบูุฑ ุงููุฑุณูุฉ
    available_benefits = [b for b in BENEFITS if b not in user_data[user_id]["sent_benefits"]]

    if available_benefits:
        # ุงุฎุชูุงุฑ ูุงุฆุฏุฉ ุนุดูุงุฆูุฉ ูู ุงูููุงุฆุฏ ุงููุชุงุญุฉ
        selected_benefit = random.choice(available_benefits)
        user_data[user_id]["sent_benefits"].append(selected_benefit)
        message = f"๐ *ูุงุฆุฏุฉ ุฌุฏูุฏุฉ* ๐\n\n{selected_benefit}"
    else:
        message = "๐ *ุชู ุงุณุชูุงู ูู ุงูููุงุฆุฏ!* ๐\n\nููุฏ ุงุณุชููุช ุฌููุน ุงูููุงุฆุฏ ุงููุชุงุญุฉ ุญุงูููุงุ ุนุฏ ูุงุญููุง ูููุฒูุฏ!"

    keyboard = [[InlineKeyboardButton("๐ ุฑุฌูุน ูููุงุฆูุฉ ุงูุฑุฆูุณูุฉ", callback_data="main_menu")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.callback_query.edit_message_text(
        message,
        reply_markup=reply_markup,
        parse_mode="Markdown",
    )
    return MAIN_MENU

# ูุนุงูุฌุฉ ุงุฎุชูุงุฑ ุจุฑูุงูุฌ ุญูุธ ุงููููุงุช ุงูุนููุฉ
async def memorize_words(update: Update, context: CallbackContext):
    await update.callback_query.answer()
    user_id = update.callback_query.from_user.id

    # ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุฏ ุญูุธ ูููุงุช ูู ูุจูุ ูุนุฑุถ ุฎูุงุฑ "ูุฑุงุฌุนุฉ ุงููููุงุช"
    if user_data[user_id]["memorized_words"]:
        keyboard = [
            [InlineKeyboardButton("๐ ูุฑุงุฌุนุฉ ุงููููุงุช", callback_data="review_words")],
            [InlineKeyboardButton("๐ ุฑุฌูุน ูููุงุฆูุฉ ุงูุฑุฆูุณูุฉ", callback_data="main_menu")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.callback_query.edit_message_text(
            "ููุฏ ููุช ุจุญูุธ ูููุงุช ูู ูุจู. ุงุฎุชุฑ ูุฑุงุฌุนุฉ ุงููููุงุช:",
            reply_markup=reply_markup,
        )
        return REVIEW_WORDS
    else:
        # ุฅุฐุง ูู ูุญูุธ ูููุงุช ูู ูุจูุ ูุนุฑุถ ุฎูุงุฑ "ูููุฉ ูุงุญุฏุฉ" ุฃู "ูููุชูู"
        keyboard = [
            [InlineKeyboardButton("๐ ูููุฉ ูุงุญุฏุฉ", callback_data="one_word")],
            [InlineKeyboardButton("๐ ูููุชูู", callback_data="two_words")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.callback_query.edit_message_text(
            "๐
